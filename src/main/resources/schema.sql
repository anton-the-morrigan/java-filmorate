CREATE TABLE IF NOT EXISTS users (
                                    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    email varchar NOT NULL,
                                    login varchar NOT NULL,
                                    name varchar NOT NULL,
                                    birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS friend_requests (
                                    user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
                                    friend_id integer REFERENCES users (user_id) ON DELETE CASCADE,
                                    CONSTRAINT validate_request CHECK (user_id <> friend_id),
                                    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS genres (
                                    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    genre_name varchar NOT NULL
);


CREATE TABLE IF NOT EXISTS mpa (
                                   mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   mpa_name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
                                    film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    name varchar NOT NULL,
                                    description varchar(200),
                                    release_date date,
                                    duration integer,
                                    genre integer REFERENCES genres (genre_id) ON DELETE RESTRICT,
                                    mpa integer REFERENCES mpa (mpa_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS likes (
                                    user_id integer REFERENCES users (user_id) ON DELETE CASCADE ,
                                    film_id integer REFERENCES films (film_id) ON DELETE CASCADE ,
                                    PRIMARY KEY (user_id, film_id)
);